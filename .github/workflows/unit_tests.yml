# This workflow will run unit tests

name: Run Unit Tests
on:
  pull_request:
    branches:
      - dev
    paths-ignore:
      - 'ovos_skills_manager/version.py'
      - 'requirements/**'
      - 'examples/**'
      - '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'MANIFEST.in'
      - 'readme.md'
      - 'scripts/**'
  push:
    branches:
      - master
    paths-ignore:
      - 'ovos_skills_manager/version.py'
      - 'requirements/**'
      - 'examples/**'
      - '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'MANIFEST.in'
      - 'readme.md'
      - 'scripts/**'
  workflow_dispatch:

jobs:
  py_build_tests:
    uses: neongeckocom/.github/.github/workflows/python_build_tests.yml@master
    with:
      python_version: "3.8"
  unit_tests:
    strategy:
      max-parallel: 2
      matrix:
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements.txt
          pip install pytest pytest-timeout pytest-cov
      - name: Install core repo
        run: |
          pip install .
      - name: Test Github Branch Parsing
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          pytest --cov=ovos_skills_manager --cov-report xml test/unittests/test_github_branch_parsing.py

      - name: Test Github Utils
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          pytest --cov-append --cov-report xml --cov=ovos_skills_manager test/unittests/test_github_utils.py

      - name: Test License Parsing
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          pytest --cov-append --cov-report xml --cov=ovos_skills_manager test/unittests/test_licenses.py

      - name: Test Skill Entry
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          pytest --cov-append --cov-report xml --cov=ovos_skills_manager test/unittests/test_skill_entry.py

      - name: Test Utils
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          pytest --cov-append --cov-report xml --cov=ovos_skills_manager test/unittests/test_utils.py

      - name: Test Search Skill
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          pytest --cov-append --cov-report xml --cov=ovos_skills_manager test/unittests/test_search_skill.py

      - name: Test OSM
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          pytest --cov-append --cov-report xml --cov=ovos_skills_manager test/unittests/test_osm.py
      - name: Upload coverage
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        uses:
          codecov/codecov-action@v2
